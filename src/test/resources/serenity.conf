webdriver {
  driver = chrome
  autodownload = true
}
headless.mode = true

serenity {
//  take.screenshots = FOR_FAILURES
  tag.failures = "true"
  linked.tags = "issue"
  browser {
    width = 1366
    height = 1080
  }
  compress.filenames = false
  report {
    accesibility = true
    durations = "1,2,4,8,15,30,60"
    tagtypes="capability,feature"
    hide.empty.requirements = true
    exclude.tags="resetappstate,singlebrowser,manual"
  }
}

//hidden.tags="manual"
#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches = """--start-maximized;--test-type;--no-sandbox;--ignore-certificate-errors;
                   --disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;
                   --incognito;--disable-infobars,--disable-gpu"""
#
# Report config
#
//hidden.tags = "resetappstate, singlebrowser"

webdriver {
  logprefs {
    driver = ALL
    browser = INFO
  }
}

environments {
  with_screenshots {
    serenity {
      take.screenshots = BEFORE_AND_AFTER_EACH_STEP
    }
  }

  # Specify saucelabs.username and saucelabs.accessKey on the command line, e.g.
  #  mvn verify -Denvironment=run_with_saucelabs -Dsaucelabs.username=<MY_SAUCELABS_USER> -Dsaucelabs.accessKey=<MY_API_KEY>
  #
  run_with_saucelabs {
    webdriver.driver = remote
    webdriver.remote.url = "https://ondemand.#{saucelabs.datacenter}.saucelabs.com/wd/hub"
    headless.mode = false

    # Some W3C Capabilities
    screenResolution = "1920x1080"
    strictFileInteractability = true
    unhandledPromptBehavior = "ignore"
    timeouts {
      script = 20000
      pageLoad = 400000
      implicit = 1000
    }

    #
    # SauceLabs-specific capabilities
    #
    saucelabs {
      #
      # Mandatory SauceLabs fields
      #
      platformName = "Windows 10"
      browserName = "Chrome"
      browserVersion = "latest"
      #
      # The saucelabs.datacenter property tells Serenity to use SauceLabs for these tests
      #
      datacenter = "us-west-1"
    }
  }

  #
  # Specify browserstack.user and browserstack.key on the command line, e.g.
  #  mvn verify -Denvironment=run_with_browserstack -Dbrowserstack.user=<MY_BROWSERSTACK_USER> -Dbrowserstack.key=<MY_API_KEY>
  #
  run_with_browserstack {
    webdriver.driver = remote
    webdriver.remote.url = "https://#{browserstack.user}:#{browserstack.key}@hub-cloud.browserstack.com/wd/hub"
    headless.mode = false
    browserstack {
      os = "Windows"
      os_version = "10"
      browser = "Edge"
      browser_version = "latest"
      resolution = "1280x800"
    }
  }
}
